<#import "macros.ftl" as my>
<#assign modelJavaPackage = my.getJavaPackage() >
<#assign intrfJavaPackage = modelJavaPackage + ".intrf" >
<#assign callJavaPackage = modelJavaPackage + ".call" >
<#assign thisJavaPackage = modelJavaPackage + ".client" >
<#assign objectName = object.getName() >
<#assign className = objectName + "Client" >
/**
 * This file is generated by the Amit
 * don't modify it manually
 */
package ${thisJavaPackage};

import com.amit.api.amit.client.runtime.AmitHttpClient;
import com.amitapi.json.runtime.__JsonSerializableException;

import java.io.IOException;
import java.io.InputStream;

/**
 * Service ${objectName} Servlet
 */
public class ${className} extends AmitHttpClient {
		private String httpEndpoint;
	
		public ${className}( String httpEndpoint ) {
			this.httpEndpoint = httpEndpoint;
		}
	
<#list object.getBaseInterfaceNames() as interfaceName >
	
	<#assign interfaceObj = project.getType( interfaceName ) >
	<#list interfaceObj.getFunctions() as function >
		<#assign fname = function.getName() >
		<#assign rtype = function.getReturn().getTypeName() >
		<#assign jrtype = my.javaType( function.getReturn() ) >
		<#assign ARfname = fname?cap_first + "Request"  >
		<#assign APfname = fname?cap_first + "Response"  >	
		/**
		 * ${fname}
		 */
		public ${jrtype} ${fname}(
				<#list function.getArguments() as arg >
					<#assign aname = arg.getName() >
					<#assign atype = my.javaType( arg ) >
					${atype} ${aname}<#if arg_has_next>,</#if>
				</#list>
				) throws IOException, __JsonSerializableException <@my.throwsExceptions items=function.getThrowsExceptionNames() />
		{
			${callJavaPackage}.Call${interfaceName}.${ARfname} request = 
				new ${callJavaPackage}.Call${interfaceName}.${ARfname}();
			<#list function.getArguments() as arg >
			request.set${aname?cap_first}( ${aname} );
			</#list>
			
			InputStream httpResult = execute( httpEndpoint + "${objectName?lower_case}/${fname?lower_case}", request );
			${callJavaPackage}.Call${interfaceName}.${APfname} response = null;
			response =
						${callJavaPackage}.Call${interfaceName}.${APfname}.__deserialize( parser( httpResult ) );
			close();
			
			if( response.getException() != null ) {
				throw response.getException();
			}
			
			<#if rtype != "void">
			return response.getReturnValue();
			</#if>
		}
		</#list>
</#list>
}
