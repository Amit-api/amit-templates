<#import "macros.ftl" as my>
<#assign modelJavaPackage = my.getJavaPackage() >
<#assign thisJavaPackage = modelJavaPackage + ".json" >
<#assign objectName = object.getName() >
<#assign childrenTypes = project.getCompositeTypeChildren( objectName ) >	
/**
 * This file is generated by the Amit
 * don't modify it manually
 */
package ${thisJavaPackage};

/**
 * type ${objectName}
 */
public class ${objectName}Serializer {		
	public static void writeDynamic(
		com.fasterxml.jackson.core.JsonGenerator jg,
		${modelJavaPackage}.${objectName} object
	) throws java.io.IOException {
		Object value = writeValueMap.get( object );
		if( value instanceof java.lang.Integer ) {
			jg.writeNumber( (java.lang.Integer)value );
		} else {
			jg.writeString( (java.lang.String)value );
		}
	}
	
	@SuppressWarnings("incomplete-switch")
	public static ${modelJavaPackage}.${objectName} readDynamic(
			com.fasterxml.jackson.core.JsonParser jp
		) throws java.io.IOException {
		${modelJavaPackage}.${objectName} result = null;
		switch(jp.getCurrentToken()) {
		case VALUE_NULL:
			return null;
		case VALUE_NUMBER_INT:
			result = readValueMap.get(jp.getValueAsInt());
			break;
		case VALUE_STRING:
			result = readValueMap.get(jp.getText());
			break;
		}
		if( result == null ) {
			throw new com.fasterxml.jackson.core.JsonParseException( jp,
				"expected  enum of type ${objectName}" );
		}		
		return result;
	}
	
	@SuppressWarnings("serial")
	private static final java.util.Map<${modelJavaPackage}.${objectName}, java.lang.Object> writeValueMap = 
		new java.util.HashMap<${modelJavaPackage}.${objectName}, java.lang.Object>() {{
<#list object.getValues() as value >
	<#assign name = value.getName()?upper_case >
			put(
				${modelJavaPackage}.${objectName}.${name},
	<#if value.getIntegerValue()??>
				${value.getIntegerValue()}
	<#else>
				"${value.getStringValue()?replace("\"", "\\\"")}"
	</#if>
			);
</#list>
		}};

	@SuppressWarnings("serial")
	private static final java.util.Map<java.lang.Object, ${modelJavaPackage}.${objectName}> readValueMap = 
		new java.util.HashMap<java.lang.Object, ${modelJavaPackage}.${objectName}>() {{
<#list object.getValues() as value >
	<#assign name = value.getName()?upper_case >
			put(
	<#if value.getIntegerValue()??>
				${value.getIntegerValue()},
	<#else>
				"${value.getStringValue()?replace("\"", "\\\"")}",
	</#if>
				${modelJavaPackage}.${objectName}.${name}
			);
</#list>
		}};
}
