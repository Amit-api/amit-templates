<#import "macros.ftl" as my>
<#assign modelJavaPackage = my.getJavaPackage() >
<#assign thisJavaPackage = modelJavaPackage + ".server.netty" >
<#assign impJavaPackage = modelJavaPackage + ".service" >

/**
 * This file is generated by the Amit
 * don't modify it manually
 */
package ${thisJavaPackage};

import com.amitapi.netty.server.NettyHttpServer;
import com.amitapi.netty.server.UrlMapHttpRequestHandler;
import com.amitapi.netty.server.ErrorHttpRequestHandler;
import io.netty.handler.codec.http.HttpResponseStatus;

public final class Server extends NettyHttpServer {
	public Server(int port, int maxRequestSize) {
		super(port, maxRequestSize, createHandler());
	}
	
	public static void main(String[] args) throws InterruptedException {
		Server server = new Server(8080, 1000000);
		server.run();
	}
	
	private static UrlMapHttpRequestHandler createHandler() {
		UrlMapHttpRequestHandler result = new UrlMapHttpRequestHandler(
			new ErrorHttpRequestHandler(HttpResponseStatus.NOT_FOUND, "endpoint not found")
		);
		
<#list project.getServices() as service >
	<#assign serviceName = service.getName() >
	<#assign handlerName = serviceName + "HttpHandler" >
		{
			${handlerName} handler = new ${handlerName}();
	<#list service.getBaseInterfaceNames() as interfaceName >
			handler.registerInterface(new ${impJavaPackage}.${interfaceName}Imp(), result);
		}
	</#list>
</#list>
		
		return result;
	}
}